name: ChatOps

on: 
  issue_comment:
    types: [created, edited]

jobs:
  listen_comments:
    runs-on: ubuntu-latest
    # This job only runs for pull request comments
    if: ${{ github.event.issue.pull_request }}
    steps:
      - name: Listen for PR Comments
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "!test"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: it
    outputs:
      run: ${{ steps.it.outputs.BOOL_TRIGGERED }}
      sha: ${{ steps.it.outputs.SHA }}
      args: ${{ steps.it.outputs.TRAILING_LINE }}

  run_tests:
    runs-on: ubuntu-latest
    needs: [listen_comments]
    if: needs.listen_comments.outputs.run == 'true'

    steps:
      - name: script
        run: |
          pwd
          hoge=`cat hoge.py`
          echo $hoge
          exit $hoge
        working-directory: script
        shell: bash
  
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.listen_comments.outputs.sha }}

      - name: Post Comment
        uses: actions/github-script@v3
        env:
          MESSAGE: |
            :white_check_mark:
            Test succeeded on ${{ needs.listen_comments.outputs.sha }}
            trailing txt : ${{ needs.listen_comments.outputs.args }}
            workflow-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.MESSAGE
            })

  error_notification:
    runs-on: ubuntu-latest
    needs: [listen_comments, run_tests]
    if: failure() && needs.listen_comments.outputs.run == 'true'
    steps:
      - name: Post Comment
        uses: actions/github-script@v3
        env:
          MESSAGE: |
            :x:
            Test failed on ${{ needs.listen_comments.outputs.sha }}
            workflow-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.MESSAGE
            })
